
DA_3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000023a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000023a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000026c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000002ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000767  00000000  00000000  000002ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006a9  00000000  00000000  00000a53  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a0  00000000  00000000  000010fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  0000139c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000037f  00000000  00000000  00001468  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001f6  00000000  00000000  000017e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000019dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__vector_13>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
	TCNT1 = 49911; 
}
void usart_1(){
	UCSR0B = (1<<TXEN0);
	UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
	UBRR0L = F_CPU/16/BAUD_RATE - 1;
  80:	85 e4       	ldi	r24, 0x45	; 69
  82:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
  86:	85 ea       	ldi	r24, 0xA5	; 165
  88:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  8c:	85 e0       	ldi	r24, 0x05	; 5
  8e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  98:	87 ef       	ldi	r24, 0xF7	; 247
  9a:	92 ec       	ldi	r25, 0xC2	; 194
  9c:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  a0:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  a4:	78 94       	sei
  a6:	ff cf       	rjmp	.-2      	; 0xa6 <main+0x26>

000000a8 <usart_2>:
}

void usart_2(unsigned int x){
	while(!(UCSR0A & (1<<UDRE0)));
  a8:	e0 ec       	ldi	r30, 0xC0	; 192
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	90 81       	ld	r25, Z
  ae:	95 ff       	sbrs	r25, 5
  b0:	fd cf       	rjmp	.-6      	; 0xac <usart_2+0x4>
	UDR0 = x;						
  b2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  b6:	08 95       	ret

000000b8 <__vector_13>:
	TCNT1 = 49911;
	sei();
	while(1){}
}

ISR(TIMER1_OVF_vect){
  b8:	1f 92       	push	r1
  ba:	0f 92       	push	r0
  bc:	0f b6       	in	r0, 0x3f	; 63
  be:	0f 92       	push	r0
  c0:	11 24       	eor	r1, r1
  c2:	0f 93       	push	r16
  c4:	1f 93       	push	r17
  c6:	2f 93       	push	r18
  c8:	3f 93       	push	r19
  ca:	4f 93       	push	r20
  cc:	5f 93       	push	r21
  ce:	6f 93       	push	r22
  d0:	7f 93       	push	r23
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
  d6:	af 93       	push	r26
  d8:	bf 93       	push	r27
  da:	cf 93       	push	r28
  dc:	df 93       	push	r29
  de:	ef 93       	push	r30
  e0:	ff 93       	push	r31
	ADCSRA|=(1<<ADSC);
  e2:	ea e7       	ldi	r30, 0x7A	; 122
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	80 64       	ori	r24, 0x40	; 64
  ea:	80 83       	st	Z, r24
	while((ADCSRA&(1<<ADIF)) == 0);
  ec:	80 81       	ld	r24, Z
  ee:	84 ff       	sbrs	r24, 4
  f0:	fd cf       	rjmp	.-6      	; 0xec <__vector_13+0x34>
	
	ADCSRA |= (1<<ADIF);
  f2:	ea e7       	ldi	r30, 0x7A	; 122
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	80 61       	ori	r24, 0x10	; 16
  fa:	80 83       	st	Z, r24
	
	int time = ADCL;
  fc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	time = time|(ADCH<<8);
 100:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	time = (time/1024) * 4096/10;
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	92 2b       	or	r25, r18
 108:	9c 01       	movw	r18, r24
 10a:	33 23       	and	r19, r19
 10c:	14 f4       	brge	.+4      	; 0x112 <__vector_13+0x5a>
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	3c 4f       	sbci	r19, 0xFC	; 252
 112:	83 2f       	mov	r24, r19
 114:	85 95       	asr	r24
 116:	85 95       	asr	r24
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	28 2f       	mov	r18, r24
 11c:	22 95       	swap	r18
 11e:	20 7f       	andi	r18, 0xF0	; 240
 120:	ca e0       	ldi	r28, 0x0A	; 10
 122:	d0 e0       	ldi	r29, 0x00	; 0
 124:	83 2f       	mov	r24, r19
 126:	92 2f       	mov	r25, r18
 128:	be 01       	movw	r22, r28
 12a:	0e 94 c9 00 	call	0x192	; 0x192 <__divmodhi4>
 12e:	8b 01       	movw	r16, r22
	usart_2((time/100)+'0');
 130:	83 2f       	mov	r24, r19
 132:	92 2f       	mov	r25, r18
 134:	68 ee       	ldi	r22, 0xE8	; 232
 136:	73 e0       	ldi	r23, 0x03	; 3
 138:	0e 94 c9 00 	call	0x192	; 0x192 <__divmodhi4>
 13c:	cb 01       	movw	r24, r22
 13e:	c0 96       	adiw	r24, 0x30	; 48
 140:	0e 94 54 00 	call	0xa8	; 0xa8 <usart_2>
	time = time%100;
	usart_2((time/10) + '0');
 144:	c8 01       	movw	r24, r16
 146:	64 e6       	ldi	r22, 0x64	; 100
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	0e 94 c9 00 	call	0x192	; 0x192 <__divmodhi4>
 14e:	be 01       	movw	r22, r28
 150:	0e 94 c9 00 	call	0x192	; 0x192 <__divmodhi4>
 154:	cb 01       	movw	r24, r22
 156:	c0 96       	adiw	r24, 0x30	; 48
 158:	0e 94 54 00 	call	0xa8	; 0xa8 <usart_2>
	time = time%10;
	TCNT1 = 49911; 
 15c:	87 ef       	ldi	r24, 0xF7	; 247
 15e:	92 ec       	ldi	r25, 0xC2	; 194
 160:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 164:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
}
 168:	ff 91       	pop	r31
 16a:	ef 91       	pop	r30
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	bf 91       	pop	r27
 172:	af 91       	pop	r26
 174:	9f 91       	pop	r25
 176:	8f 91       	pop	r24
 178:	7f 91       	pop	r23
 17a:	6f 91       	pop	r22
 17c:	5f 91       	pop	r21
 17e:	4f 91       	pop	r20
 180:	3f 91       	pop	r19
 182:	2f 91       	pop	r18
 184:	1f 91       	pop	r17
 186:	0f 91       	pop	r16
 188:	0f 90       	pop	r0
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	0f 90       	pop	r0
 18e:	1f 90       	pop	r1
 190:	18 95       	reti

00000192 <__divmodhi4>:
 192:	97 fb       	bst	r25, 7
 194:	07 2e       	mov	r0, r23
 196:	16 f4       	brtc	.+4      	; 0x19c <__divmodhi4+0xa>
 198:	00 94       	com	r0
 19a:	07 d0       	rcall	.+14     	; 0x1aa <__divmodhi4_neg1>
 19c:	77 fd       	sbrc	r23, 7
 19e:	09 d0       	rcall	.+18     	; 0x1b2 <__divmodhi4_neg2>
 1a0:	0e 94 dd 00 	call	0x1ba	; 0x1ba <__udivmodhi4>
 1a4:	07 fc       	sbrc	r0, 7
 1a6:	05 d0       	rcall	.+10     	; 0x1b2 <__divmodhi4_neg2>
 1a8:	3e f4       	brtc	.+14     	; 0x1b8 <__divmodhi4_exit>

000001aa <__divmodhi4_neg1>:
 1aa:	90 95       	com	r25
 1ac:	81 95       	neg	r24
 1ae:	9f 4f       	sbci	r25, 0xFF	; 255
 1b0:	08 95       	ret

000001b2 <__divmodhi4_neg2>:
 1b2:	70 95       	com	r23
 1b4:	61 95       	neg	r22
 1b6:	7f 4f       	sbci	r23, 0xFF	; 255

000001b8 <__divmodhi4_exit>:
 1b8:	08 95       	ret

000001ba <__udivmodhi4>:
 1ba:	aa 1b       	sub	r26, r26
 1bc:	bb 1b       	sub	r27, r27
 1be:	51 e1       	ldi	r21, 0x11	; 17
 1c0:	07 c0       	rjmp	.+14     	; 0x1d0 <__udivmodhi4_ep>

000001c2 <__udivmodhi4_loop>:
 1c2:	aa 1f       	adc	r26, r26
 1c4:	bb 1f       	adc	r27, r27
 1c6:	a6 17       	cp	r26, r22
 1c8:	b7 07       	cpc	r27, r23
 1ca:	10 f0       	brcs	.+4      	; 0x1d0 <__udivmodhi4_ep>
 1cc:	a6 1b       	sub	r26, r22
 1ce:	b7 0b       	sbc	r27, r23

000001d0 <__udivmodhi4_ep>:
 1d0:	88 1f       	adc	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	5a 95       	dec	r21
 1d6:	a9 f7       	brne	.-22     	; 0x1c2 <__udivmodhi4_loop>
 1d8:	80 95       	com	r24
 1da:	90 95       	com	r25
 1dc:	bc 01       	movw	r22, r24
 1de:	cd 01       	movw	r24, r26
 1e0:	08 95       	ret

000001e2 <_exit>:
 1e2:	f8 94       	cli

000001e4 <__stop_program>:
 1e4:	ff cf       	rjmp	.-2      	; 0x1e4 <__stop_program>
